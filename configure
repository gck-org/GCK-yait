#!/bin/sh

usage() {
cat <<EOF
Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.

  CC              C compiler command [detected]
  CFLAGS          C compiler flags [-g, ...]
  LDFLAGS         C linker flags

  --prefix=<path> Set the install path
  --debug Flags for debug build, overides CFLAGS

EOF
exit 0
}

echo () { printf "%s\n" "$*" ; }
cmdexists () { type "$1" >/dev/null 2>&1 ; }
trycc () { test -z "$CC" && cmdexists "$1" && CC=$1 ; }

prefix=/usr/bin/
CFLAGS="-std=c23 -O2 -pipe -Wall -Wextra -Wpedantic -Wformat=2 -Wshadow -Wcast-qual -Wcast-align=strict -Wconversion -Wsign-conversion -Wnull-dereference -Wstrict-overflow=5 -Wstrict-aliasing=2 -Wswitch-enum -Wundef -fstack-protector-strong -D_FORTIFY_SOURCE=3 -fPIE -pie -fno-plt -Wl,-z,relro,-z,now" # release flags
LDFLAGS=
CC=

printf "checking for C compiler... "
trycc gcc
trycc cc
trycc clang
printf "%s\n" "$CC"

DEBUG=false
for arg ; do
case "$arg" in
--help|h) usage ;;
--prefix=*) prefix=${arg#*=} ;;
--debug=*) DEBUG=true ;;
CFLAGS=*) CFLAGS=${arg#*=} ;;
LDFLAGS=*) LDFLAGS=${arg#*=} ;;
CC=*) CC=${arg#*=} ;;
*) prinf "Unrecognized option %s" $arg;;
esac
done


printf "checking weather C compiler works... "
status="fail"
tmpc="$(mktemp -d)/test.c"
echo "typedef int x;" > "$tmpc"
if output=$($CC $CFLAGS -c -o /dev/null "$tmpc" 2>&1) ; then
printf "yes\n"
else
printf "no; %s\n" "$output"
exit 1
fi

if [ -z "$DEBUG" ]; then
CFLAGS="-std=c23 -O0 -g3 -Wall -Wextra -Wpedantic -Werror -Wshadow -Wdouble-promotion -Wformat=2 -Wnull-dereference -Wconversion -Wsign-conversion -Wcast-qual -Wcast-align=strict -Wpointer-arith -Wstrict-overflow=5 -Wstrict-aliasing=2 -Wundef -Wunreachable-code -Wswitch-enum -fanalyzer -fsanitize=undefined,address -fstack-protector-strong -D_FORTIFY_SOURCE=3"
fi

printf "creating config.mak... "
printf "PREFIX=%s\n" "$prefix" > config.mak
printf "CFLAGS=%s\n" "$CFLAGS" >> config.mak
printf "LDFLAGS=%s\n" "$LDFLAGS" >> config.mak
printf "CC=%s\n" "$CC" >> config.mak
printf "done\n"
